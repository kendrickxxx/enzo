import pytest
import numpy as np
from enzo import derivatives as ddx


def test_ddx_relu():
    np.testing.assert_allclose(
        ddx.ddx_relu([[-4, 0.85], [0, 1]]), [[0, 1], [0, 1]],
    )


def test_ddx_sigmoid():
    rows = [
        [0.00484339, 0.95332232, -0.23471351, -0.23694437, -0.69553362],
        [0.55169639, -0.77593199, 2.1108949, -2.18967085, 0.4950178],
        [1.04763825, -1.09146304, -0.86531725, 0.49228401, -1.22135247],
        [0.12974547, -1.64818585, 1.11788106, 0.67242286, -1.46779844],
    ]
    np.testing.assert_allclose(
        ddx.ddx_sigmoid(rows),
        [
            [0.24999853, 0.20081238, 0.24658822, 0.24652366, 0.22204524],
            [0.23190193, 0.21584796, 0.09636924, 0.09054505, 0.23528927],
            [0.19224576, 0.18816964, 0.20847763, 0.23544494, 0.17585191],
            [0.24895083, 0.13531908, 0.18568934, 0.22374127, 0.15220462],
        ],
    )


def test_ddx_noactivation():
    rows = np.random.randn(4, 5)
    np.testing.assert_allclose(ddx.ddx_noactivation(rows), np.ones((4, 5)))


# TODO
# def test_ddx_softmax():
#     rows = [
#         [-0.47709506, -0.48558554, 1.20909449, 0.37906876, -0.11484995],
#         [0.13120358, -0.98250757, 1.01841862, -1.34023556, -0.30454957],
#         [-0.50465399, 0.56968592, 0.67665821, 1.26916208, -1.13190224],
#         [-0.2910751, -1.2050252, 0.9046714, -0.27224021, -0.89717579],
#     ]
#     np.testing.assert_allclose(ddx.ddx_softmax(rows), [[]])
